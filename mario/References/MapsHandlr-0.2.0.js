var MapsHandlr;(function(MapsHandlr_1){"use strict";var MapsHandlr=(function(){function MapsHandlr(settings){if(!settings){throw new Error("No settings given to MapsHandlr.");}
if(!settings.MapsCreator){throw new Error("No MapsCreator provided to MapsHandlr.");}
this.MapsCreator=settings.MapsCreator;if(!settings.MapScreener){throw new Error("No MapScreener provided to MapsHandlr.");}
this.MapScreener=settings.MapScreener;this.onSpawn=settings.onSpawn;this.onUnspawn=settings.onUnspawn;this.screenAttributes=settings.screenAttributes||[];this.stretchAdd=settings.stretchAdd;this.afterAdd=settings.afterAdd;}
MapsHandlr.prototype.getMapsCreator=function(){return this.MapsCreator;};MapsHandlr.prototype.getMapScreener=function(){return this.MapScreener;};MapsHandlr.prototype.getScreenAttributes=function(){return this.screenAttributes;};MapsHandlr.prototype.getMapName=function(){return this.mapName;};MapsHandlr.prototype.getMap=function(name){if(name===void 0){name=undefined;}
if(typeof name!=="undefined"){return this.MapsCreator.getMap(name);}
else{return this.mapCurrent;}};MapsHandlr.prototype.getMaps=function(){return this.MapsCreator.getMaps();};MapsHandlr.prototype.getArea=function(){return this.areaCurrent;};MapsHandlr.prototype.getAreaName=function(){return this.areaCurrent.name;};MapsHandlr.prototype.getLocation=function(location){return this.areaCurrent.map.locations[location];};MapsHandlr.prototype.getLocationEntered=function(){return this.locationEntered;};MapsHandlr.prototype.getPreThings=function(){return this.prethings;};MapsHandlr.prototype.setMap=function(name,location){if(location===void 0){location=undefined;}
this.mapCurrent=this.getMap(name);if(!this.mapCurrent){throw new Error("Unknown Map in setMap: '"+name+"'.");}
this.mapName=name;if(arguments.length>1){this.setLocation(location);}
return this.mapCurrent;};MapsHandlr.prototype.setLocation=function(name){var location,attribute,i;location=this.mapCurrent.locations[name];if(!location){throw new Error("Unknown location in setLocation: '"+name+"'.");}
this.locationEntered=location;this.areaCurrent=location.area;this.areaCurrent.boundaries={"top":0,"right":0,"bottom":0,"left":0};for(i=0;i<this.screenAttributes.length;i+=1){attribute=this.screenAttributes[i];this.MapScreener[attribute]=this.areaCurrent[attribute];}
this.prethings=this.MapsCreator.getPreThings(location.area);if(this.areaCurrent.stretches){this.setStretches(this.areaCurrent.stretches);}
else{this.stretches=undefined;}
if(this.areaCurrent.afters){this.setAfters(this.areaCurrent.afters);}
else{this.afters=undefined;}};MapsHandlr.prototype.setStretches=function(stretchesRaw){this.stretches=stretchesRaw;this.stretches.forEach(this.stretchAdd);};MapsHandlr.prototype.setAfters=function(aftersRaw){this.afters=aftersRaw;this.afters.forEach(this.afterAdd);};MapsHandlr.prototype.spawnMap=function(direction,top,right,bottom,left){if(this.onSpawn){this.applySpawnAction(this.onSpawn,true,direction,top,right,bottom,left);}};MapsHandlr.prototype.unspawnMap=function(direction,top,right,bottom,left){if(this.onUnspawn){this.applySpawnAction(this.onUnspawn,false,direction,top,right,bottom,left);}};MapsHandlr.prototype.applySpawnAction=function(callback,status,direction,top,right,bottom,left){var name,group,prething,mid,start,end,i;for(name in this.prethings){if(!this.prethings.hasOwnProperty(name)){continue;}
group=this.prethings[name][direction];if(group.length===0){continue;}
mid=(group.length/2)|0;start=this.findPreThingsSpawnStart(direction,group,mid,top,right,bottom,left);end=this.findPreThingsSpawnEnd(direction,group,mid,top,right,bottom,left);for(i=start;i<=end;i+=1){prething=group[i];if(prething.spawned!==status){prething.spawned=status;callback(prething);}}}};MapsHandlr.prototype.findPreThingsSpawnStart=function(direction,group,mid,top,right,bottom,left){var directionKey=MapsHandlr.directionKeys[direction],directionEnd=this.getDirectionEnd(directionKey,top,right,bottom,left),i;for(i=0;i<group.length;i+=1){if(group[i][directionKey]>=directionEnd){return i;}}
return i;};MapsHandlr.prototype.findPreThingsSpawnEnd=function(direction,group,mid,top,right,bottom,left){var directionKey=MapsHandlr.directionKeys[direction],directionKeyOpposite=MapsHandlr.directionKeys[MapsHandlr.directionOpposites[direction]],directionEnd=this.getDirectionEnd(directionKeyOpposite,top,right,bottom,left),i;for(i=group.length-1;i>=0;i-=1){if(group[i][directionKey]<=directionEnd){return i;}}
return i;};MapsHandlr.prototype.getDirectionEnd=function(directionKey,top,right,bottom,left){switch(directionKey){case "top":return top;case "right":return right;case "bottom":return bottom;case "left":return left;default:throw new Error("Unknown directionKey: "+directionKey);}};MapsHandlr.directionKeys={"xInc":"left","xDec":"right","yInc":"top","yDec":"bottom"};MapsHandlr.directionOpposites={"xInc":"xDec","xDec":"xInc","yInc":"yDec","yDec":"yInc"};return MapsHandlr;})();MapsHandlr_1.MapsHandlr=MapsHandlr;})(MapsHandlr||(MapsHandlr={}));