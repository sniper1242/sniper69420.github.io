var GroupHoldr;(function(GroupHoldr_1){"use strict";var GroupHoldr=(function(){function GroupHoldr(settings){if(typeof settings==="undefined"){throw new Error("No settings given to GroupHoldr.");}
if(typeof settings.groupNames==="undefined"){throw new Error("No groupNames given to GroupHoldr.");}
if(typeof settings.groupTypes==="undefined"){throw new Error("No groupTypes given to GroupHoldr.");}
this.functions={"setGroup":{},"getGroup":{},"set":{},"get":{},"add":{},"delete":{}};this.setGroupNames(settings.groupNames,settings.groupTypes);}
GroupHoldr.prototype.getFunctions=function(){return this.functions;};GroupHoldr.prototype.getGroups=function(){return this.groups;};GroupHoldr.prototype.getGroup=function(name){return this.groups[name];};GroupHoldr.prototype.getGroupNames=function(){return this.groupNames;};GroupHoldr.prototype.deleteObject=function(groupName,value){var group=this.groups[groupName];group.splice(group.indexOf(value),1);};GroupHoldr.prototype.deleteIndex=function(groupName,index,max){if(max===void 0){max=1;}
var group=this.groups[groupName];group.splice(index,max);};GroupHoldr.prototype.switchObjectGroup=function(value,groupOld,groupNew,keyNew){if(keyNew===void 0){keyNew=undefined;}
this.deleteObject(groupOld,value);this.functions.add[groupNew](value,keyNew);};GroupHoldr.prototype.applyAll=function(scope,func,args){if(args===void 0){args=undefined;}
var i;if(!args){args=[undefined];}
else{args.unshift(undefined);}
if(!scope){scope=this;}
for(i=this.groupNames.length-1;i>=0;i-=1){args[0]=this.groups[this.groupNames[i]];func.apply(scope,args);}
args.shift();};GroupHoldr.prototype.applyOnAll=function(scope,func,args){if(args===void 0){args=undefined;}
var group,i,j;if(!args){args=[undefined];}
else{args.unshift(undefined);}
if(!scope){scope=this;}
for(i=this.groupNames.length-1;i>=0;i-=1){group=this.groups[this.groupNames[i]];if(group instanceof Array){for(j=0;j<group.length;j+=1){args[0]=group[j];func.apply(scope,args);}}
else{for(j in group){if(group.hasOwnProperty(j)){args[0]=group[j];func.apply(scope,args);}}}}};GroupHoldr.prototype.callAll=function(scope,func){var args=Array.prototype.slice.call(arguments,1),i;if(!scope){scope=this;}
for(i=this.groupNames.length-1;i>=0;i-=1){args[0]=this.groups[this.groupNames[i]];func.apply(scope,args);}};GroupHoldr.prototype.callOnAll=function(scope,func){var args=Array.prototype.slice.call(arguments,1),group,i,j;if(!scope){scope=this;}
for(i=this.groupNames.length-1;i>=0;i-=1){group=this.groups[this.groupNames[i]];if(group instanceof Array){for(j=0;j<group.length;j+=1){args[0]=group[j];func.apply(scope,args);}}
else{for(j in group){if(group.hasOwnProperty(j)){args[0]=group[j];func.apply(scope,args);}}}}};GroupHoldr.prototype.clearArrays=function(){var group,i;for(i=this.groupNames.length-1;i>=0;i-=1){group=this.groups[this.groupNames[i]];if(group instanceof Array){group.length=0;}}};GroupHoldr.prototype.setGroupNames=function(names,types){var scope=this,typeFunc,typeName;if(!(names instanceof Array)){throw new Error("groupNames is not an Array");}
if(this.groupNames){this.clearFunctions();}
this.groupNames=names;this.groupTypes={};this.groupTypeNames={};if(types.constructor===Object){this.groupNames.forEach(function(name){scope.groupTypes[name]=scope.getTypeFunction(types[name]);scope.groupTypeNames[name]=scope.getTypeName(types[name]);});}
else{typeFunc=this.getTypeFunction(types);typeName=this.getTypeName(types);this.groupNames.forEach(function(name){scope.groupTypes[name]=typeFunc;scope.groupTypeNames[name]=typeName;});}
this.setGroups();this.setFunctions();};GroupHoldr.prototype.clearFunctions=function(){this.groupNames.forEach(function(name){delete this["set"+name+"Group"];delete this["get"+name+"Group"];delete this["set"+name];delete this["get"+name];delete this["add"+name];delete this["delete"+name];this.functions.setGroup={};this.functions.getGroup={};this.functions.set={};this.functions.get={};this.functions.add={};this.functions.delete={};});};GroupHoldr.prototype.setGroups=function(){var scope=this;this.groups={};this.groupNames.forEach(function(name){scope.groups[name]=new scope.groupTypes[name]();});};GroupHoldr.prototype.setFunctions=function(){var groupName,i;for(i=0;i<this.groupNames.length;i+=1){groupName=this.groupNames[i];this.createFunctionSetGroup(groupName);this.createFunctionGetGroup(groupName);this.createFunctionSet(groupName);this.createFunctionGet(groupName);this.createFunctionAdd(groupName);this.createFunctionDelete(groupName);}};GroupHoldr.prototype.createFunctionSetGroup=function(name){var scope=this;this.functions.setGroup[name]=this["set"+name+"Group"]=function(value){scope.groups[name]=value;};};GroupHoldr.prototype.createFunctionGetGroup=function(name){var scope=this;this.functions.getGroup[name]=this["get"+name+"Group"]=function(){return scope.groups[name];};};GroupHoldr.prototype.createFunctionSet=function(name){this.functions.set[name]=this["set"+name]=function(key,value){if(value===void 0){value=undefined;}
this.groups[name][key]=value;};};GroupHoldr.prototype.createFunctionGet=function(name){this.functions.get[name]=this["get"+name]=function(key){return this.groups[name][key];};};GroupHoldr.prototype.createFunctionAdd=function(name){var group=this.groups[name];if(this.groupTypes[name]===Object){this.functions.add[name]=this["add"+name]=function(value,key){group[key]=value;};}
else{this.functions.add[name]=this["add"+name]=function(value,key){if(key!==undefined){group[key]=value;}
else{group.push(value);}};}};GroupHoldr.prototype.createFunctionDelete=function(name){var group=this.groups[name];if(this.groupTypes[name]===Object){this.functions.delete[name]=this["delete"+name]=function(key){delete group[key];};}
else{this.functions.delete[name]=this["delete"+name]=function(key){group.splice(group.indexOf(key),1);};}};GroupHoldr.prototype.getTypeName=function(str){if(str&&str.charAt&&str.charAt(0).toLowerCase()==="o"){return "Object";}
return "Array";};GroupHoldr.prototype.getTypeFunction=function(str){if(str&&str.charAt&&str.charAt(0).toLowerCase()==="o"){return Object;}
return Array;};return GroupHoldr;})();GroupHoldr_1.GroupHoldr=GroupHoldr;})(GroupHoldr||(GroupHoldr={}));